#!/bin/bash
# Graudit - Rough code review tool using grep
# Written by Wireghoul - http://www.justanotherhacker.com
# Released under the GPL licence
set -e
set -o pipefail
VERSION='2.0'
basedir=`dirname $0`
BINFILE=`which grep`

# Default values
context=1
zimlines="#"
vimlines="#"
color='always'
sigdb='default'
separator='##############################################'
excludefiles='--exclude=*.bz2 --exclude=*.gz --exclude=*.zip --exclude=*.rar --exclude=*.gif --exclude=*.jpg --exclude=*.png'

#Save custom colors
OLD_COLORS=$GREP_COLORS

if [ ! -x $BINFILE ]; then
    echo "grep not found!"
    exit 2
fi
$BINFILE --exclude-dir=. test "$0" >/dev/null 2>&1
if [ $? -eq 2 ]; then
    echo $?
    echo "Graudit requires a newer version of grep (>=2.5.3)"
    exit 2
fi
version () {
    echo "Graudit version: $VERSION"
}

usage () {
    cat <<EOU
Usage: graudit [opts] /path/to/scan

OPTIONS
  -A scan ALL files
  -c <num> number of lines of context to display, default is 2
  -d <db> database to use
  -h prints a short help text
  -i case in-sensitive search
  -l lists databases available
  -L vim friendly lines
  -v prints version number
  -x exclude these files
  -z supress colors
  -Z high contrast colors


Database is one of asp, jsp, other, perl, php, python or default, not providing a database will use default
/path is the path to the file or directory to audit
EOU
}

listdb () {
if [ -n "$GRDIR" ] && [ -d $GRDIR ]; then
    ls -1 $GRDIR/*.db
fi
if [ -d /usr/share/graudit/ ]; then
     ls -1 /usr/share/graudit/*.db
fi
if [ -d ~/.graudit/ ]; then
     ls -1 ~/.graudit/*.db
fi
if [ -d "$basedir"/signatures/ ]; then
     ls -1 "$basedir"/signatures/*.db
fi
}

while getopts "AhvilLzZd:c:x:" opt; do
    case $opt in
        h)
            usage
            exit 1
        ;;
        v)
            version
            exit 0
        ;;
        l)
            listdb
            exit 0
        ;;
        z)
            color='none'
        ;;
        Z)
            export GREP_COLORS='ms=41;01;37:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36'
        ;;
        c)
            context="$OPTARG"
        ;;
        d)
            sigdb="$OPTARG"
        ;;
        i)
            icase="-i"
        ;;
        x)
            ignorepattern="--exclude=$OPTARG"
        ;;
	L)
	    zimlines="s/\([:-]\)\([0-9][0-9]*\)\([:-]\)/ \+\2\3/"
	    #\(\x1b\[.*m\x1b\[K\)
	    vimlines="s/\(\x1b.*\)\([:-]\)\(\x1b\[.*\)\([0-9][0-9]*\)\(\x1b.*\)\([:-]\)/\1 +\3\4\5\6/"
	;;
	A)
	   excludefiles=""
	;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 2
        ;;
    esac
done
#Remove arguments from $@
shift $((OPTIND-1))

#Database location can vary based on installation
if [ "$sigdb" == '-' ]; then
    database='-'
elif [ -f "$GRDIR"/$sigdb.db  ]; then
    database="$GRDIR"/$sigdb.db
elif [ -f /usr/share/graudit/$sigdb.db ]; then
    database=/usr/share/graudit/$sigdb.db
elif [ -f ~/.graudit/$sigdb.db ]; then
    database=~/.graudit/$sigdb.db
elif [ -f "$basedir"/signatures/$sigdb.db ]; then
    database="$basedir"/signatures/$sigdb.db
else
    database=$sigdb
fi


if [ -z "$1" ]; then
        usage
        exit 2
fi

# -R is recursive
# -H prints the name of the file
# -C prints # lines of context before and after the match
# -E uses extended regexp
# -f specifies the rule file (signature database)
# -n prints the line number

$BINFILE --color=$color \
         --exclude-dir=.svn \
         --exclude-dir=CVS \
         --exclude-dir=.git \
         $excludefiles \
         $icase $ignorepattern \
         -n -R -H -C $context -E \
         -f "$database" "$@" \
         | sed -e"s/^\(\x1b\[.*m\x1b\[K\)--\(\x1b\[.*\x1b\[K\)$/\1##############################################\2/" -e"s/^--$/$separator/" | sed -e"$vimlines" -e"$zimlines"
SUCCESS=$?
export GREP_COLORS="$OLD_COLORS"
exit $SUCCESS
